import binascii
import unittest
from infi.asi.cdb.diagnostic.ses_pages import get_ses_page, get_ses_page_data

# Information received from Sanmina enclosure, firmware 0509:
RECEIVE_DIAGNOSTICS_RESULT_PAGE_00 = "00 00 00 09 00 01 02 04  05 07 0a 0e 80"


RECEIVE_DIAGNOSTICS_RESULT_PAGE_01 = (
    "00 00 00 01 12 00 08 25  50 00 93 d0 01 3c 40 00"
    "4e 45 57 49 53 59 53 20  4e 44 53 2d 34 36 30 30"
    "2d 4a 44 20 20 20 20 20  30 35 30 39 05 17 3c 00"
    "10 9e 01 00 10 02 02 00  10 03 04 00 10 04 06 00"
    "10 06 01 00 10 07 02 00  10 18 06 00 10 41 72 72"
    "61 79 20 44 65 76 20 53  6c 6f 74 20 20 34 36 30"
    "30 20 45 6e 63 6c 6f 73  75 72 65 20 20 50 6f 77"
    "65 72 20 53 75 70 70 6c  79 20 20 20 20 43 6f 6f"
    "6c 69 6e 67 20 46 61 6e  20 20 20 20 20 54 65 6d"
    "70 20 53 65 6e 73 6f 72  20 20 20 20 20 42 75 7a"
    "7a 65 72 20 20 20 20 20  20 20 20 20 20 45 53 20"
    "50 72 6f 63 65 73 73 6f  72 20 20 20 20 53 41 53"
    "20 45 78 70 61 6e 64 65  72 20 20 20 20         "
)


RECEIVE_DIAGNOSTICS_RESULT_PAGE_01_ALT = (
    "01 00 00 cd 00 00 00 01  12 00 08 25 50 00 93 d0"
    "01 45 40 00 4e 45 57 49  53 59 53 20 4e 44 53 2d"
    "34 36 30 30 2d 4a 44 20  20 20 20 20 30 35 30 39"
    "01 17 3c 00 10 9e 01 00  10 02 02 00 10 03 04 00"
    "10 04 06 00 10 06 01 00  10 07 02 00 10 18 06 00"
    "10 41 72 72 61 79 20 44  65 76 20 53 6c 6f 74 20"
    "20 34 36 30 30 20 45 6e  63 6c 6f 73 75 72 65 20"
    "20 50 6f 77 65 72 20 53  75 70 70 6c 79 20 20 20"
    "20 43 6f 6f 6c 69 6e 67  20 46 61 6e 20 20 20 20"
    "20 54 65 6d 70 20 53 65  6e 73 6f 72 20 20 20 20"
    "20 42 75 7a 7a 65 72 20  20 20 20 20 20 20 20 20"
    "20 45 53 20 50 72 6f 63  65 73 73 6f 72 20 20 20"
    "20 53 41 53 20 45 78 70  61 6e 64 65 72 20 20 20"
    "20"
)


RECEIVE_DIAGNOSTICS_RESULT_PAGE_02 = (
    "00 00 00 01 00 00 00 00  01 00 00 00 01 00 00 00"
    "01 00 00 00 01 00 00 00  01 00 00 00 01 00 00 00"
    "01 00 00 00 01 00 00 00  01 00 00 00 01 00 00 00"
    "01 00 00 00 01 00 00 00  01 00 00 00 01 00 00 00"
    "01 00 00 00 01 00 00 00  01 00 00 00 01 00 00 00"
    "01 00 00 00 01 00 00 00  01 00 00 00 01 00 00 00"
    "01 00 00 00 01 00 00 00  01 00 00 00 01 00 00 00"
    "01 00 00 00 01 00 00 00  01 00 00 00 01 00 00 00"
    "01 00 00 00 01 00 00 00  01 00 00 00 01 00 00 00"
    "01 00 00 00 01 00 00 00  01 00 00 00 01 00 00 00"
    "01 00 00 00 01 00 00 00  01 00 00 00 01 00 00 00"
    "01 00 00 00 01 00 00 00  01 00 00 00 01 00 00 00"
    "01 00 00 00 01 00 00 00  01 00 00 00 01 00 00 00"
    "01 00 00 00 01 00 00 00  01 00 00 00 01 00 00 00"
    "01 00 00 00 01 00 00 00  01 00 00 00 01 00 00 00"
    "01 00 00 00 01 00 00 00  00 00 00 00 01 00 00 00"
    "00 00 00 20 01 00 00 20  01 00 00 20 00 00 00 00"
    "01 02 bc 22 01 02 c1 22  01 02 cb 22 01 02 c3 22"
    "00 00 00 00 01 00 34 00  01 00 33 00 01 00 36 00"
    "01 00 37 00 01 00 2b 00  01 00 2a 00 20 00 00 00"
    "21 00 00 00 00 00 00 00  01 00 01 00 01 00 00 00"
    "00 00 00 00 01 00 00 00  01 00 00 00 01 00 00 00"
    "01 00 00 00 01 00 00 00  01 00 00 00            "
)


RECEIVE_DIAGNOSTICS_RESULT_PAGE_04 = (
    "04 00 00 4c 00 00 1c 7d  01 00 00 04 00 00 01 00"
    "01 01 00 00 01 05 00 00  00 00 00 00 00 00 00 00"
    "00 00 00 00 0a 30 30 40  0a 30 30 41 ff ff ff 00"
    "00 00 00 00 00 00 00 00  00 01 00 00 02 00 02 00"
    "01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00"
)


RECEIVE_DIAGNOSTICS_RESULT_PAGE_07 = (
    "07 00 09 20 00 00 00 01  00 00 00 00 00 00 00 0c"
    "53 4c 4f 54 20 20 31 20  30 30 20 20 00 00 00 0c"
    "53 4c 4f 54 20 20 32 20  30 31 20 20 00 00 00 0c"
    "53 4c 4f 54 20 20 33 20  30 32 20 20 00 00 00 0c"
    "53 4c 4f 54 20 20 34 20  30 33 20 20 00 00 00 0c"
    "53 4c 4f 54 20 20 35 20  30 34 20 20 00 00 00 0c"
    "53 4c 4f 54 20 20 36 20  30 35 20 20 00 00 00 0c"
    "53 4c 4f 54 20 20 37 20  30 36 20 20 00 00 00 0c"
    "53 4c 4f 54 20 20 38 20  30 37 20 20 00 00 00 0c"
    "53 4c 4f 54 20 20 39 20  30 38 20 20 00 00 00 0c"
    "53 4c 4f 54 20 31 30 20  30 39 20 20 00 00 00 0c"
    "53 4c 4f 54 20 31 31 20  30 41 20 20 00 00 00 0c"
    "53 4c 4f 54 20 31 32 20  30 42 20 20 00 00 00 0c"
    "53 4c 4f 54 20 31 33 20  31 30 20 20 00 00 00 0c"
    "53 4c 4f 54 20 31 34 20  31 31 20 20 00 00 00 0c"
    "53 4c 4f 54 20 31 35 20  31 32 20 20 00 00 00 0c"
    "53 4c 4f 54 20 31 36 20  31 33 20 20 00 00 00 0c"
    "53 4c 4f 54 20 31 37 20  31 34 20 20 00 00 00 0c"
    "53 4c 4f 54 20 31 38 20  31 35 20 20 00 00 00 0c"
    "53 4c 4f 54 20 31 39 20  31 36 20 20 00 00 00 0c"
    "53 4c 4f 54 20 32 30 20  31 37 20 20 00 00 00 0c"
    "53 4c 4f 54 20 32 31 20  31 38 20 20 00 00 00 0c"
    "53 4c 4f 54 20 32 32 20  31 39 20 20 00 00 00 0c"
    "53 4c 4f 54 20 32 33 20  31 41 20 20 00 00 00 0c"
    "53 4c 4f 54 20 32 34 20  31 42 20 20 00 00 00 0c"
    "53 4c 4f 54 20 32 35 20  32 30 20 20 00 00 00 0c"
    "53 4c 4f 54 20 32 36 20  32 31 20 20 00 00 00 0c"
    "53 4c 4f 54 20 32 37 20  32 32 20 20 00 00 00 0c"
    "53 4c 4f 54 20 32 38 20  32 33 20 20 00 00 00 0c"
    "53 4c 4f 54 20 32 39 20  32 34 20 20 00 00 00 0c"
    "53 4c 4f 54 20 33 30 20  32 35 20 20 00 00 00 0c"
    "53 4c 4f 54 20 33 31 20  32 36 20 20 00 00 00 0c"
    "53 4c 4f 54 20 33 32 20  32 37 20 20 00 00 00 0c"
    "53 4c 4f 54 20 33 33 20  32 38 20 20 00 00 00 0c"
    "53 4c 4f 54 20 33 34 20  32 39 20 20 00 00 00 0c"
    "53 4c 4f 54 20 33 35 20  32 41 20 20 00 00 00 0c"
    "53 4c 4f 54 20 33 36 20  32 42 20 20 00 00 00 0c"
    "53 4c 4f 54 20 33 37 20  33 30 20 20 00 00 00 0c"
    "53 4c 4f 54 20 33 38 20  33 31 20 20 00 00 00 0c"
    "53 4c 4f 54 20 33 39 20  33 32 20 20 00 00 00 0c"
    "53 4c 4f 54 20 34 30 20  33 33 20 20 00 00 00 0c"
    "53 4c 4f 54 20 34 31 20  33 34 20 20 00 00 00 0c"
    "53 4c 4f 54 20 34 32 20  33 35 20 20 00 00 00 0c"
    "53 4c 4f 54 20 34 33 20  33 36 20 20 00 00 00 0c"
    "53 4c 4f 54 20 34 34 20  33 37 20 20 00 00 00 0c"
    "53 4c 4f 54 20 34 35 20  33 38 20 20 00 00 00 0c"
    "53 4c 4f 54 20 34 36 20  33 39 20 20 00 00 00 0c"
    "53 4c 4f 54 20 34 37 20  33 41 20 20 00 00 00 0c"
    "53 4c 4f 54 20 34 38 20  33 42 20 20 00 00 00 0c"
    "53 4c 4f 54 20 34 39 20  34 30 20 20 00 00 00 0c"
    "53 4c 4f 54 20 35 30 20  34 31 20 20 00 00 00 0c"
    "53 4c 4f 54 20 35 31 20  34 32 20 20 00 00 00 0c"
    "53 4c 4f 54 20 35 32 20  34 33 20 20 00 00 00 0c"
    "53 4c 4f 54 20 35 33 20  34 34 20 20 00 00 00 0c"
    "53 4c 4f 54 20 35 34 20  34 35 20 20 00 00 00 0c"
    "53 4c 4f 54 20 35 35 20  34 36 20 20 00 00 00 0c"
    "53 4c 4f 54 20 35 36 20  34 37 20 20 00 00 00 0c"
    "53 4c 4f 54 20 35 37 20  34 38 20 20 00 00 00 0c"
    "53 4c 4f 54 20 35 38 20  34 39 20 20 00 00 00 0c"
    "53 4c 4f 54 20 35 39 20  34 41 20 20 00 00 00 0c"
    "53 4c 4f 54 20 36 30 20  34 42 20 20 00 00 00 00"
    "00 00 00 a8 20 20 20 20  20 20 20 20 20 20 20 20"
    "20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20"
    "20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20"
    "20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20"
    "54 43 41 2d 30 30 33 34  31 2d 30 31 2d 42 2d 41"
    "32 20 20 20 4d 58 45 33  34 30 30 30 33 33 51 52"
    "42 30 30 33 54 43 41 2d  30 30 33 34 30 2d 30 31"
    "2d 42 20 20 4d 58 45 33  34 30 30 30 32 41 49 52"
    "41 30 44 43 54 43 41 2d  30 30 33 34 30 2d 30 31"
    "2d 42 20 20 4d 58 45 33  34 30 30 30 32 38 56 52"
    "41 30 45 36 30 30 30 42  30 30 30 31 00 00 00 00"
    "00 00 00 5c 50 43 4d 20  41 20 20 20 50 57 52 2d"
    "30 30 30 35 39 2d 30 31  2d 42 30 30 54 48 44 45"
    "4c 30 30 30 31 33 56 52  45 30 34 33 41 31 30 30"
    "30 30 30 30 54 44 50 53  2d 31 32 30 30 41 42 20"
    "41 30 30 30 41 42 4d 54  31 31 31 33 30 30 30 36"
    "36 36 30 30 53 34 46 30  30 30 30 30 30 31 30 39"
    "00 00 00 5c 50 43 4d 20  42 20 20 20 50 57 52 2d"
    "30 30 30 35 39 2d 30 31  2d 42 30 30 54 48 44 45"
    "4c 30 30 30 31 33 56 52  45 30 33 46 41 31 30 30"
    "30 30 30 30 54 44 50 53  2d 31 32 30 30 41 42 20"
    "41 30 30 30 41 42 4d 54  31 31 31 33 30 30 30 36"
    "36 32 30 30 53 34 46 30  30 30 30 30 30 31 30 39"
    "00 00 00 00 00 00 00 28  50 43 4d 41 46 41 4e 31"
    "50 57 52 2d 30 30 30 35  39 2d 30 31 2d 42 30 30"
    "54 48 44 45 4c 30 30 30  31 33 56 52 45 30 34 33"
    "00 00 00 28 50 43 4d 41  46 41 4e 32 50 57 52 2d"
    "30 30 30 35 39 2d 30 31  2d 42 30 30 54 48 44 45"
    "4c 30 30 30 31 33 56 52  45 30 34 33 00 00 00 28"
    "50 43 4d 42 46 41 4e 31  50 57 52 2d 30 30 30 35"
    "39 2d 30 31 2d 42 30 30  54 48 44 45 4c 30 30 30"
    "31 33 56 52 45 30 33 46  00 00 00 28 50 43 4d 42"
    "46 41 4e 32 50 57 52 2d  30 30 30 35 39 2d 30 31"
    "2d 42 30 30 54 48 44 45  4c 30 30 30 31 33 56 52"
    "45 30 33 46 00 00 00 00  00 00 00 2c 50 43 4d 20"
    "41 20 20 20 50 57 52 2d  30 30 30 35 39 2d 30 31"
    "2d 42 30 30 20 20 20 20  54 48 44 45 4c 30 30 30"
    "31 33 56 52 45 30 34 33  00 00 00 2c 50 43 4d 20"
    "42 20 20 20 50 57 52 2d  30 30 30 35 39 2d 30 31"
    "2d 42 30 30 20 20 20 20  54 48 44 45 4c 30 30 30"
    "31 33 56 52 45 30 33 46  00 00 00 2c 49 4f 4d 20"
    "41 20 20 20 54 43 41 2d  30 30 33 34 30 2d 30 31"
    "2d 42 20 20 20 20 20 20  4d 58 45 33 34 30 30 30"
    "32 41 49 52 41 30 44 43  00 00 00 2c 49 4f 4d 20"
    "42 20 20 20 54 43 41 2d  30 30 33 34 30 2d 30 31"
    "2d 42 20 20 20 20 20 20  4d 58 45 33 34 30 30 30"
    "32 38 56 52 41 30 45 36  00 00 00 2c 42 73 42 6f"
    "61 72 64 31 54 43 41 2d  30 30 33 34 31 2d 30 31"
    "2d 42 2d 41 32 20 20 20  4d 58 45 33 34 30 30 30"
    "33 33 51 52 42 30 30 33  00 00 00 2c 42 73 42 6f"
    "61 72 64 32 54 43 41 2d  30 30 33 34 31 2d 30 31"
    "2d 42 2d 41 32 20 20 20  4d 58 45 33 34 30 30 30"
    "33 33 51 52 42 30 30 33  00 00 00 00 00 00 00 2c"
    "42 73 42 6f 61 72 64 20  54 43 41 2d 30 30 33 34"
    "31 2d 30 31 2d 42 2d 41  32 20 20 20 4d 58 45 33"
    "34 30 30 30 33 33 51 52  42 30 30 33 00 00 00 00"
    "00 00 00 30 49 4f 4d 20  41 20 20 20 54 43 41 2d"
    "30 30 33 34 30 2d 30 31  2d 42 20 20 4d 58 45 33"
    "34 30 30 30 32 41 49 52  41 30 44 43 30 35 2e 30"
    "39 2e 30 30 00 00 00 30  49 4f 4d 20 42 20 20 20"
    "54 43 41 2d 30 30 33 34  30 2d 30 31 2d 42 20 20"
    "4d 58 45 33 34 30 30 30  32 38 56 52 41 30 45 36"
    "30 35 2e 30 39 2e 30 30  00 00 00 00 00 00 00 38"
    "53 58 50 5f 41 5f 50 20  54 43 41 2d 30 30 33 34"
    "30 2d 30 31 2d 42 20 20  4d 58 45 33 34 30 30 30"
    "32 41 49 52 41 30 44 43  30 35 2e 30 39 2e 30 30"
    "30 35 2e 30 39 2e 30 30  00 00 00 38 53 58 50 5f"
    "41 5f 53 31 54 43 41 2d  30 30 33 34 30 2d 30 31"
    "2d 42 20 20 4d 58 45 33  34 30 30 30 32 41 49 52"
    "41 30 44 43 30 35 2e 30  39 2e 30 30 30 35 2e 30"
    "39 2e 30 30 00 00 00 38  53 58 50 5f 41 5f 53 32"
    "54 43 41 2d 30 30 33 34  30 2d 30 31 2d 42 20 20"
    "4d 58 45 33 34 30 30 30  32 41 49 52 41 30 44 43"
    "30 35 2e 30 39 2e 30 30  30 35 2e 30 39 2e 30 30"
    "00 00 00 38 53 58 50 5f  42 5f 50 20 54 43 41 2d"
    "30 30 33 34 30 2d 30 31  2d 42 20 20 4d 58 45 33"
    "34 30 30 30 32 38 56 52  41 30 45 36 30 35 2e 30"
    "39 2e 30 30 30 35 2e 30  39 2e 30 30 00 00 00 38"
    "53 58 50 5f 42 5f 53 31  54 43 41 2d 30 30 33 34"
    "30 2d 30 31 2d 42 20 20  4d 58 45 33 34 30 30 30"
    "32 38 56 52 41 30 45 36  30 35 2e 30 39 2e 30 30"
    "30 35 2e 30 39 2e 30 30  00 00 00 38 53 58 50 5f"
    "42 5f 53 32 54 43 41 2d  30 30 33 34 30 2d 30 31"
    "2d 42 20 20 4d 58 45 33  34 30 30 30 32 38 56 52"
    "41 30 45 36 30 35 2e 30  39 2e 30 30 30 35 2e 30"
    "39 2e 30 30"
)


RECEIVE_DIAGNOSTICS_RESULT_PAGE_80 = (
    "80 00 00 80 ff ff ff ff  05 00 ff ff ff ff ff ff"
    "ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff"
    "ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff"
    "ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff"
    "ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff"
    "ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff"
    "ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff"
    "ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff"
    "01 00 00 00                                     "
)


def hex_to_bin(s):
    return binascii.unhexlify(s.replace(' ', ''))


class TestSESPages(unittest.TestCase):
    def test_page_00(self):
        from infi.asi.cdb.diagnostic.ses_pages import DIAGNOSTIC_PAGE_SUPPORTED_PAGES
        self.unpack_page(DIAGNOSTIC_PAGE_SUPPORTED_PAGES, RECEIVE_DIAGNOSTICS_RESULT_PAGE_00, None)

    def test_page_01(self):
        data = self.get_conf_page()

    def test_page_01_alt(self):
        from infi.asi.cdb.diagnostic.ses_pages import DIAGNOSTIC_PAGE_CONFIGURATION
        data = self.unpack_page(DIAGNOSTIC_PAGE_CONFIGURATION, RECEIVE_DIAGNOSTICS_RESULT_PAGE_01_ALT, None)

    def test_page_02(self):
        from infi.asi.cdb.diagnostic.ses_pages import DIAGNOSTIC_PAGE_ENCLOSURE_STATUS
        self.unpack_page(DIAGNOSTIC_PAGE_ENCLOSURE_STATUS, RECEIVE_DIAGNOSTICS_RESULT_PAGE_02, self.get_conf_page())

    def test_page_07(self):
        from infi.asi.cdb.diagnostic.ses_pages import DIAGNOSTIC_PAGE_ELEMENT_DESCRIPTOR
        self.unpack_page(DIAGNOSTIC_PAGE_ELEMENT_DESCRIPTOR, RECEIVE_DIAGNOSTICS_RESULT_PAGE_07, self.get_conf_page())

    def get_conf_page(self):
        from infi.asi.cdb.diagnostic.ses_pages import DIAGNOSTIC_PAGE_CONFIGURATION
        return self.unpack_page(DIAGNOSTIC_PAGE_CONFIGURATION, RECEIVE_DIAGNOSTICS_RESULT_PAGE_01, None)

    def unpack_page(self, page, packed_data, conf_page):
        page_class = get_ses_page(page)
        data_class = get_ses_page_data(page)

        data = data_class(conf_page=conf_page)
        data.unpack(hex_to_bin(packed_data))
        return data